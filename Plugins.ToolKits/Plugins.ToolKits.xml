<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Plugins.ToolKits</name>
    </assembly>
    <members>
        <member name="M:Plugins.ToolKits.Communication.Base.EasyBase.InnerChannelReceived(Plugins.ToolKits.Communication.Base.ProtocolPacket)">
            <param name="protocol"></param>
        </member>
        <member name="T:Plugins.ToolKits.Communication.Base.ProtocolPacket">
            <summary>
                协议包
            </summary>
        </member>
        <member name="M:Plugins.ToolKits.Communication.EasyTcp`1.HandleDataReceived(System.IAsyncResult)">
            <summary>
                数据接受回调函数
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:Plugins.ToolKits.EasyCompress.Decompress(System.Byte[])">
            <summary>
                解压缩
            </summary>
            <param name="compressBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Plugins.ToolKits.EasyCompress.Decompress(System.IO.Stream)">
            <summary>
                解压缩
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Plugins.ToolKits.EasyCompress.Compress(System.Byte[])">
            <summary>
                压缩
            </summary>
            <param name="buffer">要压缩的字节</param>
            <returns></returns>
        </member>
        <member name="M:Plugins.ToolKits.EasyCompress.Compress(System.IO.Stream)">
            <summary>
                压缩
            </summary>
            <param name="stream">要压缩的字节</param>
            <returns></returns>
        </member>
        <member name="F:Plugins.ToolKits.EasyHttp.ParameterType.Cookie">
            <summary>
            Cookie parameter
            </summary>
        </member>
        <member name="T:Plugins.ToolKits.EasyHttp.DataFormat">
            <summary>
                Data formats
            </summary>
        </member>
        <member name="M:Plugins.ToolKits.EasyHttp.IRestConfig.UseTimeout(System.Int32)">
            <summary>
            </summary>
            <param name="useMillisecondsTimeoutFunc">milliseconds Timeout</param>
            <returns></returns>
        </member>
        <member name="T:Plugins.ToolKits.IOCKits.Container">
            <summary>
                Inversion of control container handles dependency injection for registered types
            </summary>
        </member>
        <member name="T:Plugins.ToolKits.IOCKits.ContainerExtensions">
            <summary>
                Extension methods for Container
            </summary>
        </member>
        <member name="M:Plugins.ToolKits.IOCKits.ContainerExtensions.Register``1(Plugins.ToolKits.IOCKits.Container,System.Type)">
            <summary>
                Registers an implementation type for the specified interface
            </summary>
            <typeparam name="T">Interface to register</typeparam>
            <param name="container">This container instance</param>
            <param name="type">Implementing type</param>
            <returns>IRegisteredType object</returns>
        </member>
        <member name="M:Plugins.ToolKits.IOCKits.ContainerExtensions.Register``2(Plugins.ToolKits.IOCKits.Container)">
            <summary>
                Registers an implementation type for the specified interface
            </summary>
            <typeparam name="TInterface">Interface to register</typeparam>
            <typeparam name="TImplementation">Implementing type</typeparam>
            <param name="container">This container instance</param>
            <returns>IRegisteredType object</returns>
        </member>
        <member name="M:Plugins.ToolKits.IOCKits.ContainerExtensions.Register(Plugins.ToolKits.IOCKits.Container,System.Type,System.Type)">
            <summary>
                Registers an implementation type for the specified interface
            </summary>
            <param name="container">This container instance</param>
            <param name="interfaceType"></param>
            <param name="implementationType"></param>
            <returns>IRegisteredType object</returns>
        </member>
        <member name="M:Plugins.ToolKits.IOCKits.ContainerExtensions.Register``1(Plugins.ToolKits.IOCKits.Container,System.Func{``0})">
            <summary>
                Registers a factory function which will be called to resolve the specified interface
            </summary>
            <typeparam name="T">Interface to register</typeparam>
            <param name="container">This container instance</param>
            <param name="factory">Factory method</param>
            <returns>IRegisteredType object</returns>
        </member>
        <member name="M:Plugins.ToolKits.IOCKits.ContainerExtensions.Register``1(Plugins.ToolKits.IOCKits.Container,``0)">
            <summary>
                Registers a factory function which will be called to resolve the specified interface
            </summary>
            <param name="container">This container instance</param>
            <param name="instanceSingleTon">instance</param>
            <returns>IRegisteredType object</returns>
        </member>
        <member name="M:Plugins.ToolKits.IOCKits.ContainerExtensions.Register``1(Plugins.ToolKits.IOCKits.Container)">
            <summary>
                Registers a type
            </summary>
            <param name="container">This container instance</param>
            <typeparam name="T">Type to register</typeparam>
            <returns>IRegisteredType object</returns>
        </member>
        <member name="M:Plugins.ToolKits.IOCKits.ContainerExtensions.Resolve``1(Plugins.ToolKits.IOCKits.Container,Plugins.ToolKits.IOCKits.ResolveMode)">
            <summary>
                Returns an implementation of the specified interface
            </summary>
            <typeparam name="T">Interface type</typeparam>
            <param name="container">This container instance</param>
            <param name="resolveMode"></param>
            <returns>Object implementing the interface</returns>
        </member>
        <member name="M:Plugins.ToolKits.IOCKits.ContainerExtensions.Resolve(Plugins.ToolKits.IOCKits.Container,System.Type,Plugins.ToolKits.IOCKits.ResolveMode)">
            <summary>
                Returns an implementation of the specified interface
            </summary>
            <param name="container">This container instance</param>
            <param name="resolveMode"></param>
            <returns>Object implementing the interface</returns>
        </member>
        <member name="M:Plugins.ToolKits.MVVM.IMessenger.Register``1(``0,Plugins.ToolKits.MVVM.RegistrationMode)">
            <summary>
                <para>The object callback method must be labeled by  <see cref="T:Plugins.ToolKits.MVVM.RecipientMethodTokenAttribute" /></para>
            </summary>
            <typeparam name="TRecipient">Recipient Object</typeparam>
            <param name="recipient"></param>
            <returns></returns>
        </member>
        <member name="M:Plugins.ToolKits.MVVM.PageableViewModelBase.Search(System.String,System.Int32,System.Int32)">
            <summary>
                <para>keyword:keyword of search</para>
                <para>currentPage:the number of page</para>
                <para>pageSize:max count in a page</para>
                <para>returns:the number of total count</para>
            </summary>
            <param name="keyword">keyword of search</param>
            <param name="currentPage">the number of page</param>
            <param name="pageSize">the count in a page</param>
            <returns>total count</returns>
        </member>
    </members>
</doc>
